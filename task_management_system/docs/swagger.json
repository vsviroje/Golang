{
    "swagger": "2.0",
    "info": {
        "description": "Payment Connector for Payfast Interface",
        "title": "Payment Connector: Payfast",
        "contact": {
            "name": "Launch",
            "email": "launch-tech@circles.asia"
        },
        "version": "0.0.1"
    },
    "host": "localhost:3000/",
    "paths": {
        "/health": {
            "get": {
                "description": "This API will return the server status.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Check the health of the service.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respwriter.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/payfast/external/credential-specification": {
            "get": {
                "description": "This API will get the credential specification data based on credential type",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specification"
                ],
                "summary": "Get Credential Specification API",
                "parameters": [
                    {
                        "type": "string",
                        "description": "mode eg, TEST",
                        "name": "mode",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetCredentialSpecificationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "This API will process to update credential specification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specification"
                ],
                "summary": "update credential specification",
                "parameters": [
                    {
                        "description": "Payload",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateCredentialSpecificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UpdateCredentialSpecificationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "This API will process to add credential specification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specification"
                ],
                "summary": "add credential specification",
                "parameters": [
                    {
                        "description": "Payload",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddCredentialSpecificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AddCredentialSpecificationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "This API will process to delete credential specification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specification"
                ],
                "summary": "delete credential specification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "mode eg, upfront",
                        "name": "mode",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DeleteCredentialSpecificationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/payfast/external/specification": {
            "get": {
                "description": "This API will get the specification data based on config key",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specification"
                ],
                "summary": "Get Specification API",
                "parameters": [
                    {
                        "type": "string",
                        "description": "configKey eg, payment_gateway",
                        "name": "configKey",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetSpecificationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "This API will process to update specification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specification"
                ],
                "summary": "update specification",
                "parameters": [
                    {
                        "description": "Payload",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateSpecificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UpdateSpecificationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "This API will process to add specification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specification"
                ],
                "summary": "add specification",
                "parameters": [
                    {
                        "description": "Payload",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddSpecificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AddSpecificationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "This API will process to delete specification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specification"
                ],
                "summary": "delete specification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "configKey eg, upfront",
                        "name": "configKey",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DeleteSpecificationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/stripe/external/callback-specification": {
            "get": {
                "description": "This API will get the callback specification data based on callback type",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specification"
                ],
                "summary": "Get Callback Specification API",
                "parameters": [
                    {
                        "type": "string",
                        "description": "callbackType eg, create_card",
                        "name": "callbackType",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.GetCallbackSpecificationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "This API will process to update callback specification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specification"
                ],
                "summary": "update callback specification",
                "parameters": [
                    {
                        "description": "Payload",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateCallbackSpecificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UpdateCallbackSpecificationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "This API will process to add callback specification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specification"
                ],
                "summary": "add callback specification",
                "parameters": [
                    {
                        "description": "Payload",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddCallbackSpecificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.AddCallbackSpecificationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "This API will process to delete callback specification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specification"
                ],
                "summary": "delete callback specification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "callbackType eg, upfront",
                        "name": "callbackType",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.DeleteCallbackSpecificationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/{version}/payfast/external/call-back/payment": {
            "post": {
                "description": "This API will accept Payfast checkout events for payment",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Callback"
                ],
                "summary": "Callback for payment events",
                "parameters": [
                    {
                        "type": "string",
                        "default": "v1",
                        "description": "Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "000",
                        "description": "000,71",
                        "name": "err_code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "Your transaction is successfully completed. you will shortly be redirected to merchant website",
                        "description": "Descriptive message for transaction status",
                        "name": "err_msg",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "no_sample_found",
                        "description": "Payment gateway middleware transaction id",
                        "name": "rdv_message_key",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "2023-03-29",
                        "description": "Order date",
                        "name": "order_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "cb9cfd91-fv32-411a-8a3e-1xxa7xb2e21q",
                        "description": "core transaction id",
                        "name": "basket_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "660ffa11-e5e6-901f-5c23-620364eee73e",
                        "description": "PSP transaction id",
                        "name": "transaction_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "EB4E49672F20BF27DC335C98533BE2D3",
                        "description": "MD5 hash of `merchant_id + basket_id + \u003csecret word\u003e + txnamt + err_code`",
                        "name": "Response_Key",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "33dd29c5182c74eb97e7bcb0677146022f92eb61b01795e7d23b6f4b8658ac0a",
                        "description": "SHA256 hash of `your_basket_id|your_merchant_secret_key|your_merchant_id|payasft_err_code`",
                        "name": "validation_hash",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "1",
                        "description": "Merchant Amount",
                        "name": "merchant_amount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "no_sample_found",
                        "description": "Issuer Name",
                        "name": "issuer_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "1",
                        "description": "Discounted Amount",
                        "name": "discounted_amount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "PKR",
                        "description": "Currency",
                        "name": "transaction_currency",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "1",
                        "description": "Amount",
                        "name": "amount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "Card",
                        "description": "Payment type",
                        "name": "PaymentName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "1",
                        "description": "Transaction Amount",
                        "name": "transaction_amount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "no_sample_found",
                        "description": "Bill Number",
                        "name": "bill_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "no_sample_found",
                        "description": "Customer Id",
                        "name": "customer_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "no_sample_found",
                        "description": "Promotion Type",
                        "name": "promotion_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/{version}/payfast/internal/call-back/payment": {
            "post": {
                "description": "This API will accept insecure Payfast checkout events for payment",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Callback"
                ],
                "summary": "Insecure Callback for payment events",
                "parameters": [
                    {
                        "type": "string",
                        "default": "v1",
                        "description": "Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "000",
                        "description": "000,71",
                        "name": "err_code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "Your transaction is successfully completed. you will shortly be redirected to merchant website",
                        "description": "Descriptive message for transaction status",
                        "name": "err_msg",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "cb9cfd91-fv32-411a-8a3e-1xxa7xb2e21q",
                        "description": "core transaction id",
                        "name": "basket_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "660ffa11-e5e6-901f-5c23-620364eee73e",
                        "description": "PSP transaction id",
                        "name": "transaction_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "1",
                        "description": "Discounted Amount",
                        "name": "discounted_amount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "PKR",
                        "description": "Currency",
                        "name": "transaction_currency",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "1",
                        "description": "Amount",
                        "name": "amount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "Card",
                        "description": "Payment type",
                        "name": "PaymentName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "no_sample_found",
                        "description": "Promotion Type",
                        "name": "promotion_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/{version}/{country}/{locale}/{tenant}/payfast/internal/admin/transactions": {
            "get": {
                "description": "This API returns a list of transactions which matches the filters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "get list of transactions",
                "parameters": [
                    {
                        "type": "string",
                        "default": "v1",
                        "description": "Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "sg",
                        "description": "Country",
                        "name": "country",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "local",
                        "description": "Tenant",
                        "name": "tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "en",
                        "description": "Locale",
                        "name": "locale",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "UPFRONT",
                        "description": "UPFRONT,REFUND",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "ac8d59ce-5026-498d-abaf-2b959596b885",
                        "description": "connector transaction id",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "SUCCESS",
                        "description": "SUCCESS,FAILURE",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ListTransactionResponse"
                        }
                    }
                }
            }
        },
        "/{version}/{country}/{locale}/{tenant}/payfast/internal/admin/transactions/{id}": {
            "get": {
                "description": "This API returns a list of transactions which matches the filters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "get list of transactions",
                "parameters": [
                    {
                        "type": "string",
                        "default": "v1",
                        "description": "Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "sg",
                        "description": "Country",
                        "name": "country",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "local",
                        "description": "Tenant",
                        "name": "tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "en",
                        "description": "Locale",
                        "name": "locale",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "ac8d59ce-5026-498d-abaf-2b959596b885",
                        "description": "connector transaction id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Transaction"
                        }
                    }
                }
            }
        },
        "/{version}/{country}/{locale}/{tenant}/payfast/internal/payment/refund": {
            "post": {
                "description": "This API will process refund request of an existing payment and returns refund details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Process refund payment requests",
                "parameters": [
                    {
                        "type": "string",
                        "default": "\"42ab4\"",
                        "description": "Tenant ID",
                        "name": "Tenant-Id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "\"1232321\"",
                        "description": "Request ID",
                        "name": "Request-Id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "v1",
                        "description": "Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "sg",
                        "description": "Country",
                        "name": "country",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "local",
                        "description": "Tenant",
                        "name": "tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "en",
                        "description": "Locale",
                        "name": "locale",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request Payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateRefundRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateRefundResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/{version}/{country}/{locale}/{tenant}/payfast/internal/payment/upfront": {
            "post": {
                "description": "This API will process upfront payment requests and returns payment details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Process upfront payment requests",
                "parameters": [
                    {
                        "type": "string",
                        "default": "\"42ab4\"",
                        "description": "Tenant ID",
                        "name": "Tenant-Id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "\"1232321\"",
                        "description": "Request ID",
                        "name": "Request-Id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "v1",
                        "description": "Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "sg",
                        "description": "Country",
                        "name": "country",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "local",
                        "description": "Tenant",
                        "name": "tenant",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "en",
                        "description": "Locale",
                        "name": "locale",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request Payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateUpfrontRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CreateUpfrontResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/respwriter.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.AddCallbackSpecificationRequest": {
            "type": "object",
            "properties": {
                "baseUrl": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.AddCredentialSpecificationRequest": {
            "type": "object",
            "properties": {
                "merchant_id": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "secret_word": {
                    "type": "string"
                },
                "secured_key": {
                    "type": "string"
                }
            }
        },
        "request.AddSpecificationRequest": {
            "type": "object",
            "properties": {
                "configKey": {
                    "type": "string"
                },
                "configValue": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "request.CreateRefundRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "required",
                    "type": "number",
                    "example": 1000.1
                },
                "async": {
                    "type": "boolean"
                },
                "coreReferenceId": {
                    "description": "required, core payment ID",
                    "type": "string",
                    "example": "5c3c8134-ab6b-4c03-89ea-b74dc2ac9fe3"
                },
                "coreTransactionId": {
                    "description": "required, core refund ID",
                    "type": "string",
                    "example": "5c3c8134-ab6b-4c03-89ea-b74dc2ac9fe3"
                },
                "currency": {
                    "description": "required",
                    "type": "string",
                    "example": "SGD"
                },
                "notificationChannel": {
                    "description": "required if async=true",
                    "$ref": "#/definitions/request.TransactionCallback"
                },
                "paymentConfigCategory": {
                    "type": "string",
                    "example": "TEST"
                }
            }
        },
        "request.CreateUpfrontRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 0
                },
                "coreInstrumentId": {
                    "type": "string",
                    "example": "2c7223af-5aee-4f0c-9578-80262bdee749"
                },
                "coreProfileId": {
                    "description": "will be used for creating stripe Customer",
                    "type": "string",
                    "example": "2c7223af-5aee-4f0c-9578-80262bdee749"
                },
                "coreTransactionId": {
                    "type": "string",
                    "example": "2c7223af-5aee-4f0c-9578-80262bdee749"
                },
                "currency": {
                    "type": "string",
                    "example": "SGD"
                },
                "paymentConfigCategory": {
                    "type": "string",
                    "example": "TEST"
                }
            }
        },
        "request.TransactionCallback": {
            "type": "object",
            "properties": {
                "method": {
                    "type": "string",
                    "example": "POST"
                },
                "type": {
                    "type": "string",
                    "example": "http_webhook"
                },
                "url": {
                    "type": "string",
                    "example": "http://my-domain.com/payments/communication/"
                }
            }
        },
        "request.UpdateCallbackSpecificationRequest": {
            "type": "object",
            "properties": {
                "baseUrl": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.UpdateCredentialSpecificationRequest": {
            "type": "object",
            "properties": {
                "merchant_id": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "secret_word": {
                    "type": "string"
                },
                "secured_key": {
                    "type": "string"
                }
            }
        },
        "request.UpdateSpecificationRequest": {
            "type": "object",
            "properties": {
                "configKey": {
                    "type": "string"
                },
                "configValue": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "response.AddCallbackSpecificationResponse": {
            "type": "object",
            "properties": {
                "baseUrl": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "response.AddCredentialSpecificationResponse": {
            "type": "object",
            "properties": {
                "merchant_id": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "secret_word": {
                    "type": "string"
                },
                "secured_key": {
                    "type": "string"
                }
            }
        },
        "response.AddSpecificationResponse": {
            "type": "object",
            "properties": {
                "configKey": {
                    "type": "string"
                }
            }
        },
        "response.CreateRefundResponse": {
            "type": "object",
            "properties": {
                "connectorTransactionId": {
                    "type": "string",
                    "example": "5c3c8134-ab6b-4c03-89ea-b74dc2ac9fe3"
                },
                "coreReferenceId": {
                    "type": "string",
                    "example": "0ab1266c-70a6-442f-af8c-4664610c1bce"
                },
                "coreTransactionId": {
                    "type": "string",
                    "example": "fcdd50f0-3999-43b4-bb53-8821ea9eb230"
                },
                "paymentGatewayReferenceId": {
                    "type": "string"
                },
                "refundedAmount": {
                    "type": "number",
                    "example": 100.5
                },
                "status": {
                    "type": "string",
                    "example": "SUCCESS"
                }
            }
        },
        "response.CreateUpfrontResponse": {
            "type": "object",
            "properties": {
                "connectorInstrumentId": {
                    "type": "string",
                    "example": "3184abf1-8452-4b90-b502-75db646233fd"
                },
                "connectorTransactionId": {
                    "type": "string"
                },
                "coreInstrumentId": {
                    "type": "string",
                    "example": "2c7223af-5aee-4f0c-9578-80262bdee749"
                },
                "coreProfileId": {
                    "type": "string"
                },
                "coreTransactionId": {
                    "type": "string",
                    "example": "5c3c8134-ab6b-4c03-89ea-b74dc2ac9fe3"
                },
                "data": {
                    "$ref": "#/definitions/response.Data"
                },
                "errorCode": {
                    "type": "string",
                    "example": "400"
                },
                "errorMessage": {
                    "type": "string",
                    "example": "NotAllowed"
                },
                "paymentIntentStatus": {
                    "type": "string",
                    "example": "FAILURE"
                },
                "status": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "response.Data": {
            "type": "object",
            "properties": {
                "intent": {
                    "description": "payfast payment",
                    "$ref": "#/definitions/response.Intent"
                },
                "object": {
                    "type": "string",
                    "example": "stripe"
                }
            }
        },
        "response.DeleteCallbackSpecificationResponse": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "response.DeleteCredentialSpecificationResponse": {
            "type": "object",
            "properties": {
                "mode": {
                    "type": "string"
                }
            }
        },
        "response.DeleteSpecificationResponse": {
            "type": "object",
            "properties": {
                "configKey": {
                    "type": "string"
                }
            }
        },
        "response.GetCallbackSpecificationResponse": {
            "type": "object",
            "properties": {
                "baseUrl": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "response.GetCredentialSpecificationResponse": {
            "type": "object",
            "properties": {
                "merchant_id": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "secret_word": {
                    "type": "string"
                },
                "secured_key": {
                    "type": "string"
                }
            }
        },
        "response.GetSpecificationResponse": {
            "type": "object",
            "properties": {
                "configKey": {
                    "type": "string",
                    "example": "payment_gateway"
                },
                "configValue": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "response.Intent": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "basket_id": {
                    "type": "string"
                },
                "checkout_url": {
                    "type": "string"
                },
                "currency_code": {
                    "type": "string"
                },
                "merchant_id": {
                    "type": "number"
                },
                "merchant_name": {
                    "type": "string"
                },
                "order_date": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "txn_desc": {
                    "type": "string"
                }
            }
        },
        "response.ListTransactionResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Transaction"
                    }
                }
            }
        },
        "response.Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "charge_amount": {
                    "type": "number"
                },
                "coreTransactionId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "discount_amount": {
                    "type": "number"
                },
                "errorCode": {
                    "type": "string"
                },
                "errorMessage": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "instrumentId": {
                    "type": "string"
                },
                "metadata": {
                    "type": "string"
                },
                "promotionType": {
                    "type": "string"
                },
                "pspReference": {
                    "type": "string"
                },
                "pspRefundReference": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "response.UpdateCallbackSpecificationResponse": {
            "type": "object",
            "properties": {
                "baseUrl": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "response.UpdateCredentialSpecificationResponse": {
            "type": "object",
            "properties": {
                "merchant_id": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "secret_word": {
                    "type": "string"
                },
                "secured_key": {
                    "type": "string"
                }
            }
        },
        "response.UpdateSpecificationResponse": {
            "type": "object",
            "properties": {
                "configKey": {
                    "type": "string",
                    "example": "payment_gateway"
                },
                "configValue": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "respwriter.DebugDetails": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Password should be 8 to 13 character long"
                },
                "message": {
                    "type": "string",
                    "example": "Invalid password"
                },
                "responseTime": {
                    "type": "string",
                    "example": "2021-07-10T13:03:17"
                }
            }
        },
        "respwriter.ErrorDetails": {
            "type": "object",
            "properties": {
                "debug": {
                    "$ref": "#/definitions/respwriter.DebugDetails"
                },
                "errorCode": {
                    "type": "string",
                    "example": "ERROR_VALIDATION_FAILURE"
                },
                "errorId": {
                    "type": "integer",
                    "example": 400001
                }
            }
        },
        "respwriter.ErrorResponse": {
            "type": "object",
            "properties": {
                "failure": {
                    "$ref": "#/definitions/respwriter.ErrorDetails"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "respwriter.SuccessResponse": {
            "type": "object",
            "properties": {
                "result": {},
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}